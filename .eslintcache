[{"C:\\Users\\Omar Abdi Ali\\Advanced JavaScript projects\\kunskapskontroll2\\kunskapskontroll2\\src\\index.js":"1","C:\\Users\\Omar Abdi Ali\\Advanced JavaScript projects\\kunskapskontroll2\\kunskapskontroll2\\src\\App.js":"2","C:\\Users\\Omar Abdi Ali\\Advanced JavaScript projects\\kunskapskontroll2\\kunskapskontroll2\\src\\reportWebVitals.js":"3","C:\\Users\\Omar Abdi Ali\\Advanced JavaScript projects\\kunskapskontroll2\\kunskapskontroll2\\src\\Components\\Gameplay\\Gameplay.js":"4"},{"size":500,"mtime":1609179169955,"results":"5","hashOfConfig":"6"},{"size":212,"mtime":1609179169409,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1609179170315,"results":"8","hashOfConfig":"6"},{"size":4778,"mtime":1609179170847,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1pzsogy",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\Omar Abdi Ali\\Advanced JavaScript projects\\kunskapskontroll2\\kunskapskontroll2\\src\\index.js",[],["21","22"],"C:\\Users\\Omar Abdi Ali\\Advanced JavaScript projects\\kunskapskontroll2\\kunskapskontroll2\\src\\App.js",["23"],"import logo from './logo.svg';\nimport './App.css';\nimport Game from'./Components/Gameplay/Gameplay'\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n     <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Omar Abdi Ali\\Advanced JavaScript projects\\kunskapskontroll2\\kunskapskontroll2\\src\\reportWebVitals.js",[],"C:\\Users\\Omar Abdi Ali\\Advanced JavaScript projects\\kunskapskontroll2\\kunskapskontroll2\\src\\Components\\Gameplay\\Gameplay.js",["24","25","26","27","28","29","30","31"],"import { symbol } from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Gameplay.css'\r\n\r\n\r\nconst PlayerCard=({color, symbol})=> {\r\n    const style = {\r\n        background:color\r\n    }\r\n    return(\r\n        <div style = {style} className=\"player-card\">\r\n            {symbol}\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Gameplay extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.symbol=[\"rock\",\"paper\",\"scissor\"]\r\n        this.state = {\r\n            player:'choose',\r\n            computer:'computer',\r\n            winner:'',\r\n            mainStarter:true,\r\n            inputNumber:'',\r\n            rounds:0\r\n        }\r\n    }\r\n    startTheGame = (e) => {\r\n        this.setState({ mainStarter: false })\r\n        this.setState({add:'add a number'})\r\n        if(this.state.inputNumber===0|| this.state.inputNumber===''){\r\n            this.setState({ mainStarter: true })\r\n        }else {\r\n            this.setState({ mainStarter: false })\r\n        }\r\n        e.preventDefault()\r\n\t}\r\n    runGame=(e)=>{\r\n        this.setState({\r\n            player:this.state.player,\r\n            computer:this.symbol[Math.floor(Math.random()*3)]\r\n        })\r\n        this.setState({\r\n            winner:this.selectWinner()\r\n        })\r\n        this.setState({ rounds: this.state.rounds + 1 })\r\n\r\n        if(this.state.rounds===this.state.inputNumber){\r\n            this.setState({rounds:this.state.rounds=this.state.inputNumber})\r\n            this.setState({again:this.startAgain()})\r\n            this.setState({winner:this.selectWinner()==null})\r\n            this.setState({\r\n                player:this.state.player='replay',\r\n                computer:this.state.computer='replay'\r\n            })\r\n        }\r\n        const {player,computer,symbol} = this.state;\r\n\t\tif (player.move !== symbol) {\r\n\t\t\tplayer.symbol.push(player.move);\r\n\t\t\tcomputer.symbol.push(computer.move);\r\n\t\t\tthis.setState({\r\n\t\t\t\tplayer: player,\r\n\t\t\t\tcomputer: computer\r\n\t\t\t})\r\n        }\r\n        e.preventDefault()\r\n        \r\n    }\r\n    onChangeInput(e) {\r\n        this.setState({ inputNumber: parseInt(e.target.value)})\r\n    }\r\n    selectWinner=()=>{\r\n        const { player, computer } = this.state;\r\n\t\tif (player === computer) {\r\n\t\t\treturn \"It's a draw!\";\r\n\t\t} else if (\r\n\t\t\t(player === \"rock\" && computer === \"scissors\") ||\r\n\t\t\t(player === \"scissors\" && computer === \"paper\") ||\r\n\t\t\t(player === \"paper\" && computer === \"rock\")\r\n\t\t) {\r\n            return \"Player Wins!\";\r\n\t\t} else {\r\n\t\t\treturn \"Computer Wins!\";\r\n        }\r\n    }\r\n    startAgain() {\r\n\t\treturn \"start again\"\r\n    }\r\n    restart=()=>{\r\n        this.setState({rounds:this.state.rounds=0})\r\n        this.setState({mainStarter:this.state.mainStarter=true})\r\n        this.setState({\r\n            player:this.state.player='choose',\r\n            computer:this.state.computer='computer'\r\n        })\r\n    }\r\n    \r\n    selectMove=move=>{\r\n        console.log('clicked')\r\n        this.setState({\r\n            player:move\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {winner,again, player, add}=this.state;\r\n\r\n        if (this.state.mainStarter  ){\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>Put how many rounds you want to play</h3>\r\n\t\t\t\t\t<input  name=\"input\" type=\"number\" onChange={(e) => { this.onChangeInput(e) }}  />\r\n\t\t\t\t\t<button class=\"btn btn-outline-success\" onClick={this.startTheGame}>Starta Spelet</button> \r\n                    <h1 className=\"danger\">{add}</h1>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n        }\r\n        \r\n        return (\r\n            <div className=\"App\">\r\n                <h1 className=\"player\">player</h1>\r\n                <PlayerCard\r\n                    color=\"green\"\r\n                    symbol={this.state.player}\r\n                    />\r\n                    <button class=\"btn btn-outline-dark\" move={player} onClick={()=>this.selectMove(\"rock\")}>rock</button>\r\n                    <button class=\"btn btn-outline-dark\" move={player} onClick={()=>this.selectMove(\"paper\")}>paper</button>\r\n                    <button class=\"btn btn-outline-dark\" move={player} onClick={()=>this.selectMove(\"scissor\")}>scissor</button>\r\n                    <hr/>\r\n                <h1 className=\"computer\">Computer</h1>\r\n                <PlayerCard\r\n                    color=\"red\"\r\n                    symbol={this.state.computer}  />\r\n                    <div className=\"winner\">{winner ? this.selectWinner() : null}</div>\r\n                    <button class=\"btn btn-outline-success\" onClick={this.runGame}>run the game</button>\r\n                    <h1>{this.state.rounds}</h1>\r\n                    <div>{again}</div>\r\n                    <button class=\"btn btn-outline-danger\" onClick={this.restart}>restart</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Gameplay;\r\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":8,"nodeType":"38","messageId":"39","endLine":1,"endColumn":12},{"ruleId":"36","severity":1,"message":"40","line":1,"column":10,"nodeType":"38","messageId":"39","endLine":1,"endColumn":16},{"ruleId":"41","severity":1,"message":"42","line":52,"column":35,"nodeType":"43","endLine":52,"endColumn":45},{"ruleId":"41","severity":1,"message":"42","line":56,"column":24,"nodeType":"43","endLine":56,"endColumn":34},{"ruleId":"41","severity":1,"message":"42","line":57,"column":26,"nodeType":"43","endLine":57,"endColumn":36},{"ruleId":"41","severity":1,"message":"42","line":93,"column":31,"nodeType":"43","endLine":93,"endColumn":41},{"ruleId":"41","severity":1,"message":"42","line":94,"column":36,"nodeType":"43","endLine":94,"endColumn":46},{"ruleId":"41","severity":1,"message":"42","line":96,"column":20,"nodeType":"43","endLine":96,"endColumn":30},{"ruleId":"41","severity":1,"message":"42","line":97,"column":22,"nodeType":"43","endLine":97,"endColumn":32},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'symbol' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]